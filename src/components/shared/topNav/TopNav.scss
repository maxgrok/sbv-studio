@import '../../../styles/variables';

.TopNav {
  display: flex;
  align-items: center;
  position: relative;
  padding: 15px 50px;
  width: calc(100% - 100px);
  background-color: $primary;
  @media (max-width: $tablet) {
    padding: 15px 25px;
    width: calc(100% - 50px);
  }
  &__Desktop {
    margin-left: auto;
    display: none;
    white-space: nowrap;
    @media (min-width: $tablet) {
      display: flex;
      align-items: center;
      justify-content: center;
    }
    @media (max-width: 1168px) {
      align-self: center;
    }
    a {
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
      height: auto;
      margin-left: 50px;
      color: $primary;
      text-decoration: none;
      font-size: .7em;
      @media (max-width: 1168px) {
        font-size: .6em;
        margin-left: 30px;
      }
      color: white;
      &:after {
        content: '';
        background-color: transparent;
        width: 100%;
        position: absolute;
        bottom: 0;
        left: 0;
        transition: all 0.15s linear;
      }
      &:hover:after {
        content: '';
        background-color: $primary;
        width: 100%;
        position: absolute;
        bottom: 0;
        left: 0;
        transition: all 0.15s linear;
      }
      &.Active {
        color: $primary;
        &:after {
          content: '';
          background-color: $primary;
          height: 3px;
          width: 100%;
          position: absolute;
          bottom: 0;
          left: 0;
          transition: all 0.15s linear;
        }
      }
    }
  }
}

.TopNav__Mobile {
  position: fixed;
  padding: 100px 50px 25px 25px;
  top: 0px;
  right: 0px;
  width: 100%;
  height: 100vh;
  background: $background-dark;
  opacity: 0;
  z-index: -1;
  transition: all 0.1s linear;
  pointer-events: none;
  &--Contents {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    a {
      font-size: 1.25em;
      margin-top: 25px;
      color: $primary;
      text-decoration: none;
    }
    button {
      margin-top: 25px;
    }
  }
  &--Open {
    opacity: 1;
    z-index: 1;
    pointer-events: all;
  }
}


.menu {
  // define the height of the menu
  --menu-height: 40px;
  // holder and ul general style
  // box-sizing: border-box;
  position: absolute;
  top:4vw;
  ul {
    list-style: none;
    padding: 16px;
    color: white;
    margin: 0;
    li, li a {
      opacity: .8;
      color: white;      
      cursor: pointer;
      transition: 200ms;
      text-decoration: none;
      white-space: nowrap;
      font-size: .7em;
      &:after {
        content: '';
        background-color: transparent;
        width: 100%;
        position: absolute;
        bottom: 0;
        left: 0;
        transition: all 0.15s linear;
      }
      &:hover:after {
        content: '';
        background-color: $primary;
        width: 100%;
        position: absolute;
        bottom: 0;
        left: 0;
        transition: all 0.15s linear;
      }
      &.Active {
        color: $primary;
        &:after {
          content: '';
          background-color: $primary;
          height: 3px;
          width: 100%;
          position: absolute;
          bottom: 0;
          left: 0;
          transition: all 0.15s linear;
        }    
      }      
    }
    // lets put an arrow down 
    // to the li`s with dropdown
    li {
      color: white;
      padding-right: 36px;
      &::before {
        content: '';
        width: 0; 
        height: 0; 
        border-left: 5px solid transparent;
        border-right: 5px solid transparent;
        border-top: 5px solid #40b1f0;
        position: absolute;
        right: 8px;
        top: 50%;
        transform: translateY(-50%);
      }
    }
    .link a {
      // links dont need arrow
      &::before {
        padding-right: 0;
        display: none;
      }      
    }
  }
  // the first ul inside the container
  // is the menu, so must be visible 
  // and have its own style
  > ul {
    display: flex;
    height: var(--menu-height);
    align-items: center;
    background-color: #28384d;
    // the first ul elements can be a
    // link or an li with a nested ul. 
    // the nested ul will be a dropdown
    li {
      color:white;
      position: relative;
      margin: 0 8px;
      // the dropdown style
      ul {
        visibility: hidden;
        opacity: 0;        
        padding: 0;
        min-width: 160px;
        background-color: #28384d;
        position: absolute;
        top: calc(var(--menu-height) + 5px);
        left: 50%;
        transform: translateX(-50%);
        transition: 200ms;
        transition-delay: 200ms;
        // the dropdown items style
        li {
          margin: 0;
          padding: 3px 3px;
          display: flex;
          align-items: left;
          justify-content: flex-start;
          height: 30px;
          padding-right: 40px;
          // lets put an arrow right
          // to the inner li`s with
          // dropdowns
          &::before {
            width: 0; 
            height: 0; 
            border-top: 5px solid transparent;
            border-bottom: 5px solid transparent;
            border-left: 5px solid #77a7e6;
          }
          // every dropdown after the
          // first must open to the right
          ul {
            top: -3%;
            left: 100%;
            transform: translate(0)
          }
          &:hover {
            background-color: #77a7e6;
          }
        }
      }
      // on hover an li (not an <a>)
      // must show its ul (dropdown)
      &:hover {
        > ul {
          opacity: 1;
          visibility: visible;
          transition-delay: 0ms;
        }
      }
    }
  }
}


// Old -- Refactoring

.navbar__hamburger {
  position: absolute;
  top: 75px;
  transform: translateY(-50%);
  right: 50px;
  z-index: 2;
  cursor: pointer;
}

// Hamburger - RF af

@charset "UTF-8";
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

// Settings
// ==================================================
$hamburger-padding-x: 0px !default;
$hamburger-padding-y: 0px !default;
$hamburger-layer-width: 28px !default;
$hamburger-layer-height: 3px !default;
$hamburger-layer-spacing: 6px !default;
$hamburger-layer-color: $primary !default;
$hamburger-layer-border-radius: 2px !default;
$hamburger-hover-opacity: 1 !default;
$hamburger-hover-transition-duration: 0.15s !default;
$hamburger-hover-transition-timing-function: linear !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter: false !default;
$hamburger-hover-filter: none !default;

// Hamburger
// ==================================================
.hamburger {
  padding: $hamburger-padding-y $hamburger-padding-x;
  @media (min-width: $tablet) {
    display: none;
  }
  @media (max-width: $tablet) {
    display: inline-block;
  }
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: $hamburger-hover-transition-duration;
  transition-timing-function: $hamburger-hover-transition-timing-function;

  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  outline: none;
  overflow: visible;

  &:hover {
    @if $hamburger-hover-use-filter == true {
      filter: $hamburger-hover-filter;
    } @else {
      opacity: $hamburger-hover-opacity;
      .hamburger-inner {
        &,
        &::before,
        &::after {
          background-color: $primary;
        }
      }
    }
  }
}

.hamburger-box {
  width: $hamburger-layer-width;
  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: $hamburger-layer-height / -2;

  &,
  &::before,
  &::after {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height;
    background-color: $hamburger-layer-color;
    border-radius: $hamburger-layer-border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: '';
    display: block;
  }

  &::before {
    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }

  &::after {
    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }
}

// Spin animation
.hamburger--spin {
  .hamburger-inner {
    transition-duration: 0.22s;
    transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

    &::before {
      transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in;
    }

    &::after {
      transition: bottom 0.1s 0.25s ease-in,
        transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    }
  }

  &.is-active {
    .hamburger-inner {
      transform: rotate(225deg);
      transition-delay: 0.12s;
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

      &::before {
        top: 0;
        opacity: 0;
        transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out;
      }

      &::after {
        bottom: 0;
        transform: rotate(-90deg);
        transition: bottom 0.1s ease-out,
          transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
      }
    }
  }
}
